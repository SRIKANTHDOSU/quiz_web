import sqlite3
import os

# Get absolute path to language.db
base_dir = os.path.abspath(os.path.dirname(__file__))
db_path = os.path.join(base_dir, "language.db")

# Connect to SQLite
connection = sqlite3.connect(db_path)
cur = connection.cursor()

# Create table
cur.execute("""
    CREATE TABLE IF NOT EXISTS programming_concepts (
        id INTEGER PRIMARY KEY AUTOINCREMENT,
        language TEXT,
        concepts TEXT
    );
""")

# âœ… Correct concept dictionary (no repeated keys)
concepts = {
    "python": [
    "Introduction to Python", "Installing Python and Setting Up the Environment", 
    "Python Syntax and Structure", "Variables and Data Types", "Basic Operators (Arithmetic, Comparison, Logical)",
    "Conditional Statements (if, elif, else)", "Loops (for, while)", "Functions and Defining Functions", 
    "Arguments and Return Values", "Lambda Functions", "Recursive Functions", "List Manipulation",
    "Tuples and Tuple Operations", "Dictionaries and Dictionary Operations", 
    "Sets and Set Operations", "String Manipulation and Methods", "String Formatting", 
    "Input and Output in Python (Reading from Files, Writing to Files)", "List Comprehensions",
    "Set and Dictionary Comprehensions", "Error Handling and Exceptions (try, except, finally)", 
    "Custom Exception Handling", "Assertions", "Modules and Packages in Python", "Importing Modules", 
    "Virtual Environments (venv, pipenv)", "Working with Python Standard Library", 
    "Date and Time Handling (datetime module)", "Working with Regular Expressions (re module)", 
    "File Handling (open, read, write, with statement)", "JSON and CSV File Handling", "Python for Data Analysis",
    "Pandas Library Basics", "Numpy Arrays and Operations", "Matplotlib for Data Visualization", 
    "Object-Oriented Programming (Classes, Objects)", "Encapsulation in Python", "Inheritance in Python", 
    "Polymorphism in Python", "Abstraction in Python", "Special Methods in Python (e.g., __init__, __str__)",
    "Decorators in Python", "Generators and Yield", "Context Managers in Python (with statement)", 
    "Python Iterators", "Python Magic Methods", "Type Hinting and Annotations", 
    "Unit Testing and Test-Driven Development (unittest, pytest)", "File and Directory Operations", 
    "Python for Web Development (Flask, Django)", "Python Web Scraping (BeautifulSoup, Scrapy)",
    "Working with Databases (SQLite, MySQL, PostgreSQL)", "SQLAlchemy ORM", "Python for Machine Learning", 
    "Scikit-learn for Data Modeling", "TensorFlow and Keras for Deep Learning", "PyTorch for Deep Learning", 
    "Python for Natural Language Processing (NLTK, SpaCy)", "Multithreading in Python", "Multiprocessing in Python", 
    "AsyncIO and Asynchronous Programming", "Python Networking (Socket Programming)", 
    "Building REST APIs in Python (Flask, Django REST Framework)", "Python for Automation and Scripting", 
    "Command Line Interface (CLI) Tools in Python", "Python Packaging (setuptools, pip)", 
    "Creating Python Web APIs with Flask", "Python with Cloud Platforms (AWS, Google Cloud, Azure)", 
    "Testing and Debugging Python Code", "Profiling and Optimizing Python Code", 
    "Python for Game Development (Pygame)", "Python for GUI Development (Tkinter, PyQt)", 
    "Python Design Patterns", "Observer, Factory, Singleton Design Patterns", 
    "Security and Cryptography in Python (hashlib, pycryptodome)", "Working with APIs in Python (requests, aiohttp)", 
    "Python for DevOps and System Administration", "Python for Cloud Computing", 
    "Python for Internet of Things (IoT)", "Python for Big Data (PySpark, Dask)", "Distributed Computing with Python", 
    "Python for Data Science", "Machine Learning Pipelines in Python", "Data Cleaning and Preprocessing", 
    "Time Complexity and Big O Notation", "Algorithms in Python (Sorting, Searching, Graphs, Trees)", 
    "Python Memory Management", "Garbage Collection in Python", "Python for Bioinformatics", 
    "Python for Data Engineering", "Web Scraping and Automation with Selenium", 
    "Python for Blockchain Development", "Python for Quantum Computing", "Python for Embedded Systems",
    "Creating Python Packages", "Python Performance Tuning", "Using Cython for Speeding Up Python Code", 
    "Python for Computer Vision (OpenCV)", "Python for Image Processing", "Python for Audio Processing",
    "Python for Robotics", "Event-Driven Programming in Python", "Building Desktop Applications with Python", 
    "Building Chatbots in Python", "Advanced Python Libraries (Django, Flask, Tornado, Celery)", 
    "Designing Python APIs", "Microservices Architecture in Python", "CI/CD Pipelines in Python", 
    "Version Control with Git and Python", "Python for Cloud Native Applications", 
    "Serverless Applications with Python", "Python for Web Scraping at Scale", 
    "Python for Geospatial Data Processing", "Machine Learning with TensorFlow", "Deep Learning with PyTorch",
    "Python for High-Performance Computing", "Scientific Computing in Python", 
    "Automating the Web with Python (Selenium, Scrapy)", "Unit Testing and Mocking in Python", 
    "Python for Big Data (Apache Spark, PySpark)", "Event-Driven Programming in Python", "Python Data Visualization with Plotly"
],
    "java": [
    "Introduction to Java Programming", "Setting Up the Java Development Environment", 
    "Java Syntax and Structure", "Variables and Data Types", "Constants and Literals", 
    "Operators in Java (Arithmetic, Logical, Relational, Bitwise)", "Control Flow Statements (if, else, switch)", 
    "Loops in Java (for, while, do-while)", "Functions and Methods in Java", 
    "Method Overloading and Overriding", "Passing Arguments to Methods", "Recursion in Java", 
    "Arrays in Java", "Multi-dimensional Arrays", "Strings and String Manipulation", 
    "Working with Collections (List, Set, Map, Queue)", "Generics in Java", "Exception Handling in Java (try, catch, throw, throws)", 
    "Java Packages and Import Statements", "Access Modifiers (private, public, protected, default)", 
    "Object-Oriented Programming (OOP) Principles in Java", "Classes and Objects", "Constructor and Constructor Overloading", 
    "Inheritance in Java", "Polymorphism in Java", "Encapsulation in Java", "Abstraction in Java", 
    "Interfaces in Java", "Abstract Classes and Methods", "Nested Classes", "Inner Classes", 
    "Static Keyword in Java", "Singleton Design Pattern", "Java Memory Management (Heap, Stack)", 
    "Garbage Collection in Java", "Java Streams and Lambda Expressions", "Functional Programming in Java", 
    "Java I/O (Input/Output) Streams", "File Handling in Java (File, BufferedReader, PrintWriter)", 
    "Serialization and Deserialization in Java", "Concurrency in Java (Multithreading)", "Thread Lifecycle", 
    "Synchronized Methods and Blocks", "Executor Framework in Java", "Java Reflection API", 
    "Java Annotations", "Java Enum Types", "Java 8 Features (Stream API, Optional, Date and Time API)", 
    "Java Networking (Sockets, URL, HTTP, ServerSocket)", "Working with Databases in Java (JDBC)", 
    "JavaFX for GUI Development", "Swing for GUI Development", "Building Web Applications with Servlets and JSP", 
    "Spring Framework (Spring Boot, Spring MVC)", "Java Design Patterns", "Factory, Singleton, Observer Patterns", 
    "SOLID Principles in Java", "Unit Testing in Java (JUnit, TestNG)", "Dependency Injection in Java", 
    "Logging in Java (Log4j, SLF4J)", "Java Web Frameworks (Spring, Hibernate)", 
    "Building RESTful Web Services in Java", "Java 9 Modules", "Java 14 New Features", 
    "JVM Internals and Garbage Collection", "JVM Performance Tuning", "Building and Managing Java Projects (Maven, Gradle)", 
    "Java Security (Cryptography, Secure Communication)", "Java for Big Data (Hadoop, Spark)", 
    "Java for Android Development", "Java for Cloud Applications", "Java for Microservices", 
    "Java for Big Data and Data Analysis", "Java for Internet of Things (IoT)", "Java for Embedded Systems", 
    "Java for Game Development", "Performance Optimization in Java", "Profiling Java Applications", 
    "Java for Distributed Systems", "Java for Real-time Systems", "Testing and Debugging in Java", 
    "Java for Machine Learning (Deeplearning4j, Weka)", "Cross-platform Java Applications", 
    "Cross-platform Development with Java (Desktop, Web, Mobile)", "Building Modular Java Applications with OSGi"
],
  "c": [
    "Introduction to C Programming", "Setting Up the C Development Environment", "C Syntax and Structure", 
    "Variables and Data Types", "Constants and Literals", "Operators in C (Arithmetic, Logical, Relational, Bitwise)", 
    "Control Structures (if, else, switch)", "Loops in C (for, while, do-while)", 
    "Functions in C", "Function Prototypes and Definitions", "Passing Arguments to Functions", 
    "Recursion in C", "Arrays in C", "Multi-dimensional Arrays", "Pointers in C", "Pointer Arithmetic", 
    "Pointers and Arrays", "Memory Management in C (malloc, calloc, free)", 
    "String Handling in C", "Working with C Strings (char arrays)", "Structures in C", 
    "Union in C", "Enumerations in C", "File Handling in C (fopen, fread, fwrite, fclose)", 
    "Error Handling in C (errno, perror)", "Macros and Preprocessor Directives", "Conditional Compilation in C", 
    "Working with Header Files", "C Standard Library Functions", "Dynamic Memory Allocation", 
    "Command Line Arguments in C", "Bitwise Operations in C", "Understanding Memory Layout (stack, heap, data segment)", 
    "Object-Oriented Programming Concepts in C (through structures)", "Interfacing C with Other Languages (Assembly, Python)", 
    "C Standard Library: `stdio.h`, `stdlib.h`, `string.h`, `math.h` and Others", "Data Structures in C (Linked List, Stack, Queue, Tree, Graph)", 
    "Advanced Pointers (Function Pointers, Pointer to Pointer)", "Static and Dynamic Libraries in C", 
    "Compiler and Linker in C", "Debugging C Code (gdb, valgrind)", "Optimization Techniques in C", 
    "Concurrency in C (Multithreading with pthreads)", "Inter-Process Communication (IPC) in C", 
    "Sockets Programming in C", "Signal Handling in C", "C Preprocessor and Macros", 
    "C for Embedded Systems Programming", "Working with C on Linux/Unix", "System Calls in C", 
    "Working with Hardware Interfaces (GPIO, UART, I2C, SPI)", "C for System Programming", 
    "Memory Leaks and How to Avoid Them", "Security and Buffer Overflow in C", "C for Real-Time Systems", 
    "Compiling and Building C Programs (Makefiles, GCC)", "C and Network Programming", 
    "Using C for Hardware Control (microcontrollers, embedded systems)", "C for Operating System Development", 
    "Data Representation and Manipulation in C", "Implementing Algorithms in C", "Sorting and Searching Algorithms", 
    "Graph Algorithms in C", "Tree Traversal Algorithms", "Complexity Analysis of Algorithms in C", 
    "Writing C Libraries and Using External Libraries", "C for Game Development (2D and 3D)", 
    "Performance Profiling and Optimization in C", "Memory Management Best Practices in C", 
    "Writing Unit Tests for C Code", "C for Cross-Platform Development", "Portability Issues in C", 
    "Using C with Database Systems (MySQL, SQLite)", "C for GUI Programming (with GTK, Qt)", 
    "Building C Projects with Makefiles", "C for Cloud Computing and Distributed Systems", 
    "Cross-Compiling C Code for Different Architectures", "Working with C and Version Control Systems (Git)"
],

    
    
    "Javascript": [
    "Variables (var, let, const)", "Data Types (Number, String, Boolean, etc.)", "Operators (Arithmetic, Comparison, Logical)",
    "Input and Output (prompt, alert, console.log)", "Conditional Statements (if, else if, else, switch)",
    "Loops (for, while, do...while)", "Arrays", "Objects", "Functions (declaration, expression, arrow)",
    "Scope (global, local, block)", "Hoisting", "Closures", "Callback Functions",
    "Promises and Async/Await", "String Methods", "Array Methods (map, filter, reduce, etc.)",
    "Date and Time (`Date` object)", "Math and Number Methods", "Error Handling (try, catch, finally)",
    "Events and Event Listeners", "DOM Manipulation (getElementById, querySelector, etc.)",
    "DOM Events (click, input, submit, etc.)", "Form Handling and Validation",
    "ES6+ Features (destructuring, spread/rest, template literals, etc.)",
    "Arrow Functions", "Default Parameters", "Object and Array Destructuring",
    "Classes and Objects (ES6 Classes)", "Inheritance and Prototypes",
    "Modules (import/export)", "Strict Mode", "JSON Handling (parse, stringify)",
    "SetTimeout and SetInterval", "LocalStorage and SessionStorage",
    "Regular Expressions (`RegExp`)", "Debouncing and Throttling",
    "Fetch API and HTTP Requests", "Event Bubbling and Capturing",
    "Function Currying", "Immediately Invoked Function Expressions (IIFE)",
    "Memory Management and Garbage Collection", "Debugging and Console Tools",
    "Unit Testing (Jest, Mocha)", "Webpack and Bundlers (basics)",
    "Understanding 'this' keyword", "Shallow vs Deep Copy", "Truthy and Falsy Values"
  ],
  "Typescript": [
    "Basic Types (string, number, boolean, null, undefined)", "Variables (let, const, var)", "Arrays", "Tuples", 
    "Enums", "Any Type", "Void and Never Types", "Unknown Type", "Type Inference", "Type Aliases", "Interfaces", 
    "Classes", "Access Modifiers (public, private, protected)", "Methods and Constructors", "Getter and Setter", 
    "Abstract Classes", "Interfaces vs Types", "Function Types", "Optional and Default Parameters", "Generics", 
    "Union and Intersection Types", "Literal Types", "Type Guards", "Type Assertions", "Nullable Types", 
    "Type Compatibility", "Object-Oriented Programming (OOP) Concepts", "Extending Classes", "Overloading Methods and Functions", 
    "Decorators", "Namespaces and Modules", "Import/Export", "TypeScript with ES6 Features", "Declaration Files (.d.ts)", 
    "Third-Party Libraries and Type Definitions (DefinitelyTyped)", "TypeScript Configuration (`tsconfig.json`)", 
    "Compiling TypeScript", "Advanced Types (Mapped, Conditional, and Index Types)", "Utility Types (Partial, Pick, Record, Omit)", 
    "Intersection Types", "TypeScript and React (JSX)", "Asynchronous Programming with TypeScript (Promises, async/await)", 
    "Promise Type Definitions", "Working with TypeScript in Node.js", "Error Handling with Try/Catch", 
    "Unit Testing with TypeScript (Jest, Mocha)", "Working with TypeScript in Angular", "TypeScript with Redux", 
    "TypeScript and Webpack", "Strict Type-Checking Options", "Modules and Namespaces", "Custom Type Definitions", 
    "Type Narrowing", "TypeScript with GraphQL", "Handling JSON Data in TypeScript", "TypeScript for Front-End Development", 
    "TypeScript for Back-End Development (with Express)", "Advanced Object-Oriented Programming (OOP) in TypeScript", 
    "Mixin Classes and Interfaces"
],
"Ruby": [
    "Variables (local, global, instance, class, constant)", "Data Types (Integer, String, Float, Boolean, NilClass, etc.)",
    "Operators (Arithmetic, Comparison, Logical)", "Conditionals (if, else, elsif, unless)", "Loops (for, while, until, each)",
    "Arrays", "Hashes (Dictionaries)", "Symbols", "Methods (def, return, parameters)", "Blocks and Procs",
    "Yield Keyword", "Lambda Functions", "Classes and Objects", "Instance Variables and Methods", "Class Variables",
    "Access Modifiers (public, private, protected)", "Inheritance", "Polymorphism", "Encapsulation", "Modules and Mixins",
    "Class Methods vs Instance Methods", "Method Overloading and Overriding", "Constructor Methods (initialize)",
    "Exception Handling (begin, rescue, ensure, raise)", "File I/O (open, read, write, close)", "Regular Expressions",
    "Iterators", "Enumerable Module", "Enumerables (map, select, inject, etc.)", "String Manipulation", "Type Conversion",
    "String Interpolation", "Array and Hash Manipulation", "Blocks and Yielding to Blocks", "Object-Oriented Programming (OOP)",
    "Duck Typing", "Metaprogramming", "Class and Instance Variables", "RubyGems and Bundler", "Testing (RSpec, Minitest)",
    "Rails Basics (MVC, ActiveRecord, Routes)", "Ruby on Rails Controllers", "Ruby on Rails Views and Helpers",
    "Ruby on Rails Models and ActiveRecord Queries", "Ruby on Rails Migrations", "Ruby on Rails Routing",
    "Ruby on Rails Associations (has_many, belongs_to, has_one)", "Ruby on Rails Forms", "Ruby on Rails Views (ERB)",
    "Ruby on Rails Validations", "Ruby on Rails Callbacks", "Ruby on Rails RESTful Architecture", "Ruby on Rails Authentication",
    "Ruby on Rails Authorization", "Ruby on Rails Caching", "Ruby on Rails Background Jobs (ActiveJob)"
],
"PHP": [
    "Variables (global, local, static, superglobals)", "Data Types (String, Integer, Float, Boolean, Array, Object, NULL)",
    "Operators (Arithmetic, Comparison, Logical, Assignment)", "Conditionals (if, else, elseif, switch)", 
    "Loops (for, while, do-while, foreach)", "Arrays (indexed, associative, multidimensional)", 
    "Functions (defining, calling, return, parameters)", "Superglobals ($_GET, $_POST, $_SESSION, $_COOKIE, $_REQUEST)",
    "String Manipulation (strlen, substr, strpos, etc.)", "Type Casting and Type Juggling", "Form Handling (GET and POST)",
    "File Handling (fopen, fread, fwrite, fclose, file_get_contents)", "Sessions and Cookies",
    "Date and Time Functions", "Error Handling (try, catch, exception, error_reporting)", 
    "Regular Expressions (preg_match, preg_replace, preg_split)", "Classes and Objects (OOP)",
    "Instance Methods and Properties", "Access Modifiers (public, private, protected)", "Static Methods and Properties",
    "Constructor and Destructor Methods", "Inheritance and Polymorphism", "Abstract Classes", "Interfaces", 
    "Namespaces", "Traits", "Magic Methods (__construct, __destruct, __get, __set, __call, etc.)",
    "Exception Handling (throw, try-catch, custom exceptions)", "File Uploading", "Database Interaction (MySQLi, PDO)",
    "Prepared Statements", "SQL Injection Prevention", "CRUD Operations", "PHP Data Objects (PDO) and Object-Oriented Database Access",
    "Error Logging", "Autoloading Classes", "Dependency Injection", "Composer and Managing Packages",
    "PHP Frameworks (Laravel, Symfony, CodeIgniter, etc.)", "Routing in PHP Frameworks", "MVC Architecture in PHP",
    "RESTful APIs in PHP", "Sending Emails (PHP Mail, PHPMailer)", "Security Practices (XSS, CSRF, SQL Injection)",
    "PHP and JavaScript Integration", "JSON Handling (json_encode, json_decode)", "File Permissions in PHP", 
    "PHP for Command Line Scripting", "PHP and Caching (APC, Memcached, Redis)", "PHP and Unit Testing (PHPUnit)",
    "PHP Performance Optimization", "PHP and WebSockets", "PHP Session Management", "PHP and Cloud Services (AWS, GCP, etc.)",
    "PHP and Docker", "PHP and Unit Testing (PHPUnit)", "Unit Testing with Mocking in PHP", "PHP for REST APIs",
    "PHP for WebSockets", "PHP Security Best Practices", "PHP for Web Scraping"
],
"HTML": [
    "HTML Structure (DOCTYPE, html, head, body)", "HTML Elements (div, p, span, h1-h6, a, etc.)", 
    "HTML Attributes (id, class, style, href, src, alt, etc.)", "Headings and Paragraphs", "Links and Anchors", 
    "Images (img)", "Lists (ul, ol, li)", "Forms (form, input, textarea, button, select, option)", 
    "Tables (table, tr, td, th, tbody, thead)", "Meta Tags (charset, viewport, title, description)", 
    "Text Formatting (b, i, u, em, strong, etc.)", "Semantic HTML (header, footer, article, section, nav)", 
    "Inline vs Block Elements", "HTML5 Doctype", "HTML5 New Elements (main, figure, aside, etc.)", "Embedded Media (audio, video)",
    "SVG (Scalable Vector Graphics)", "Iframes", "Forms (input types, placeholders, validation)", 
    "Form Submission Methods (GET, POST)", "Web Accessibility (aria-label, alt text, roles)", "HTML Validation", 
    "Input Types (text, number, password, checkbox, radio, email, etc.)", "HTML5 APIs (localStorage, sessionStorage, geolocation)",
    "Custom Data Attributes (data-)", "Canvas", "Embedding External Content (object, embed, iframe, script)", 
    "Linking Stylesheets and JavaScript Files", "Forms Validation (required, pattern, min/max)", "HTML Event Attributes (onclick, onsubmit, etc.)", 
    "HTML Meta Tags for SEO", "Head Elements (meta, link, style, script)", "HTML5 Web Storage (localStorage, sessionStorage)", 
    "Responsive Design with Viewport Meta Tag", "HTML Entities", "HTML Document Structure and Best Practices", 
    "HTML Templates", "HTML Forms and Input Validation", "HTML Links (anchor tags with query strings)", 
    "HTML Accessibility (aria roles, keyboard navigation)", "HTML Forms and POST Method", "HTML with JavaScript Integration", 
    "HTML Canvas and SVG for Graphics", "HTML5 Multimedia Elements", "HTML Semantic Elements for SEO", 
    "HTML5 Web Workers", "HTML and CSS Integration for Layouts", "HTML WebSockets", "HTML Rendering and Browser Compatibility"
],
"CSS": [
    "CSS Syntax (Selectors, Properties, Values)", "Types of CSS (Inline, Internal, External)",
    "CSS Selectors (Universal, Class, ID, Element, Attribute, Grouping, Descendant)", 
    "Colors (Hex, RGB, RGBA, HSL, HSLA)", "Units (px, %, em, rem, vh, vw)", 
    "Box Model (content, padding, border, margin)", "Display Property (block, inline, inline-block, none)",
    "Positioning (static, relative, absolute, fixed, sticky)", "Float and Clear", 
    "Z-Index", "Overflow (visible, hidden, scroll, auto)", "Typography (font-family, font-size, font-weight, line-height, letter-spacing)",
    "Text Properties (text-align, text-decoration, text-transform, word-spacing)",
    "Backgrounds (background-color, background-image, background-repeat, background-position, background-size)", 
    "Borders (border-width, border-style, border-color, border-radius)", 
    "Margins and Padding (shorthand and individual sides)", "Width and Height", 
    "Media Queries (Responsive Design)", "Flexbox (flex, justify-content, align-items, align-self, flex-wrap, flex-direction)",
    "Grid Layout (grid-template, grid-area, grid-gap, grid-column, grid-row)", 
    "CSS Transitions (transition-property, duration, delay, timing-function)", 
    "CSS Animations (keyframes, animation-name, duration, iteration, direction)", 
    "Transformations (translate, rotate, scale, skew)", "Visibility vs Display", 
    "Opacity and Transparency", "Pseudo-classes (:hover, :active, :focus, :nth-child)", 
    "Pseudo-elements (::before, ::after)", "Variables (Custom Properties --var)", 
    "Important Rule (!important)", "CSS Inheritance and Specificity", 
    "Combinators (>, +, ~, space)", "Attribute Selectors", "Responsive Web Design Principles", 
    "Viewport Units (vh, vw)", "Dark Mode and Color Schemes", "CSS Functions (calc(), clamp(), min(), max())", 
    "Vendor Prefixes (-webkit-, -moz-, -ms-, etc.)", "CSS Resets and Normalize.css", 
    "Shadows (text-shadow, box-shadow)", "Clip-path", "Object-fit and Object-position", 
    "Filter Effects (blur, brightness, contrast, etc.)", "Backdrop Filter", 
    "Cursor Property", "Pointer Events", "CSS for Print Media", 
    "Layering and Stacking Contexts", "CSS Logical Properties (margin-inline, padding-block, etc.)", 
    "Aspect Ratio", "Content Property (with ::before and ::after)", 
    "Scroll Behavior (smooth scrolling)", "Custom Fonts with @font-face", 
    "Importing Stylesheets (@import)", "Writing Mode and Text Orientation", 
    "CSS Counters", "Subgrid (CSS Grid Advanced Feature)", 
    "CSS Modules (with frameworks/libraries)", "Scoped Styles (Shadow DOM and frameworks like Vue/React)"
],
"SQL": [
    "SQL Syntax and Statements", "Database, Table, and Record Basics", "Data Types (INT, VARCHAR, DATE, etc.)",
    "CREATE, ALTER, DROP (Database and Table)", "INSERT INTO (Adding Records)", "SELECT Statement (Basic Queries)",
    "WHERE Clause (Filtering Records)", "AND, OR, NOT Conditions", "ORDER BY Clause (Sorting Results)", 
    "LIMIT and OFFSET (Pagination)", "DISTINCT (Eliminating Duplicates)", "UPDATE Statement", "DELETE Statement",
    "LIKE, IN, BETWEEN, IS NULL", "Aliases (AS)", "Aggregate Functions (COUNT, SUM, AVG, MIN, MAX)", 
    "GROUP BY Clause", "HAVING Clause", "JOINs (INNER, LEFT, RIGHT, FULL OUTER)", "UNION and UNION ALL",
    "Subqueries (Nested SELECTs)", "CASE Statement", "SQL Constraints (NOT NULL, UNIQUE, PRIMARY KEY, FOREIGN KEY, CHECK, DEFAULT)",
    "Indexes (CREATE, DROP, Benefits)", "SQL Views (CREATE VIEW, ALTER VIEW)", "Stored Procedures",
    "Functions (User-Defined Functions)", "Triggers", "Transactions (BEGIN, COMMIT, ROLLBACK)", 
    "ACID Properties", "Normalization (1NF, 2NF, 3NF, BCNF)", "Denormalization", 
    "Data Integrity", "ER Diagrams and Relational Modeling", "SQL Injection and Prevention", 
    "Prepared Statements", "Using SQL with Python/Flask", "Database Export and Import", 
    "SQL Performance Tuning (EXPLAIN, Query Optimization)", "Temporary Tables", "Common Table Expressions (CTE)",
    "Window Functions (ROW_NUMBER, RANK, DENSE_RANK, OVER)", "Pivoting and Unpivoting Data", 
    "Working with NULL Values", "SET Operations (INTERSECT, EXCEPT)", "Recursive Queries", 
    "JSON in SQL (JSON functions)", "Handling Dates and Time", "Advanced Joins (Self Join, Cross Join)",
    "Stored Procedures vs Functions", "Materialized Views", "Security and User Privileges (GRANT, REVOKE)"
],
"Go": [
    "Go Syntax and Structure", "Packages and Imports", "Variables and Constants", 
    "Data Types (int, float, string, bool, etc.)", "Operators (Arithmetic, Logical, Comparison)", 
    "Control Structures (if, else, switch)", "Loops (for - only loop type in Go)", 
    "Functions (Declaration, Return Values, Multiple Return Values)", "Error Handling (error type, custom errors)", 
    "Defer, Panic, and Recover", "Pointers and Memory Management", 
    "Arrays and Slices", "Maps (Dictionaries)", "Strings and String Manipulation", 
    "Structs (User-defined Types)", "Methods and Receivers", "Interfaces", 
    "Type Embedding and Composition", "Type Aliases and Type Conversion", 
    "Concurrency with Goroutines", "Channels (Buffered and Unbuffered)", 
    "Select Statement for Channels", "Mutexes and Race Conditions", 
    "Packages and Modular Programming", "Go Modules (go.mod and Dependency Management)", 
    "Unit Testing with `testing` Package", "Benchmarking and Profiling", 
    "Standard Library (fmt, os, io, bufio, strconv, etc.)", 
    "File Handling (Read/Write Files)", "Working with JSON (encoding/json)", 
    "HTTP Server and Client (net/http)", "Building REST APIs in Go", 
    "Error Wrapping and Unwrapping", "Reflection with `reflect` Package", 
    "Context Package (Managing Cancellation and Deadlines)", 
    "Interfaces vs Concrete Types", "Go Routines vs Threads", 
    "Garbage Collection in Go", "Dependency Injection in Go", 
    "Cross Compilation and Building Binaries", "Best Practices and Idiomatic Go", 
    "Using Third-party Packages", "CLI Applications in Go", "Go Routines with WaitGroups", 
    "Testing with Mocking", "Embedding Files (embed package - Go 1.16+)"
],
"c++": [
    "Basic Syntax and Program Structure", "Variables and Data Types", "Constants and Macros",
    "Operators (Arithmetic, Relational, Logical, Bitwise, Assignment)", 
    "Input and Output (cin, cout, getline)", "Control Structures (if, else, switch)", 
    "Loops (for, while, do-while)", "Functions and Function Overloading", "Default Parameters in Functions",
    "Recursion", "Arrays and Multidimensional Arrays", "Pointers and References", 
    "Dynamic Memory Allocation (new, delete)", "Strings (C-style and std::string)", 
    "Structures (`struct`) and Unions", "Enumerations (`enum`)", 
    "Object-Oriented Programming (Classes and Objects)", "Constructors and Destructors", 
    "Access Specifiers (public, private, protected)", "Static Members", 
    "Friend Functions and Friend Classes", "Inheritance (Single, Multiple, Multilevel, Hierarchical)", 
    "Polymorphism (Compile-time and Run-time)", "Virtual Functions and Abstract Classes", 
    "Operator Overloading", "Function Templates and Class Templates", 
    "Exception Handling (try, catch, throw)", "Namespaces", 
    "Standard Template Library (STL)", "STL Containers (vector, map, set, list, unordered_map)", 
    "STL Algorithms (sort, find, for_each, etc.)", "STL Iterators", 
    "File Handling (ifstream, ofstream, fstream)", "Type Casting (static_cast, dynamic_cast, etc.)", 
    "Preprocessor Directives (#define, #include, #ifdef)", "Const Correctness", 
    "Lambda Expressions (C++11 and later)", "Smart Pointers (unique_ptr, shared_ptr, weak_ptr)", 
    "Move Semantics and Rvalue References", "Multithreading (std::thread, mutex, lock_guard)", 
    "Function Pointers", "RAII (Resource Acquisition Is Initialization)", 
    "C++11/14/17/20 Features", "Compile-time Programming with `constexpr`", 
    "Design Patterns in C++ (Singleton, Factory, Observer)", 
    "Build Systems and Makefiles", "Linking and Compilation Process"
],
"c#": [
    "Basic Syntax and Program Structure", "Variables and Data Types", "Constants and Literals",
    "Operators (Arithmetic, Logical, Relational, Bitwise)", "Control Structures (if, else, switch)",
    "Loops (for, while, do-while, foreach)", "Methods (Functions)", "Parameters (ref, out, params)",
    "Recursion", "Arrays and Collections (Array, List, Dictionary, HashSet)", "Strings and String Manipulation",
    "Object-Oriented Programming (Classes and Objects)", "Constructors and Destructors",
    "Access Modifiers (public, private, protected, internal)", "Static Members", 
    "Properties (get, set)", "Inheritance", "Polymorphism (Method Overriding, Overloading)", 
    "Abstract Classes and Methods", "Interfaces", "Structs and Enums", "Exception Handling (try, catch, finally, throw)", 
    "Delegates", "Events", "Anonymous Methods", "Lambda Expressions", "LINQ (Language Integrated Query)", 
    "Generics (Generic Classes, Methods, Collections)", "Nullable Types", "Extension Methods", 
    "Indexer and Index Properties", "Operator Overloading", "Namespaces and Assemblies", 
    "File Handling (StreamReader, StreamWriter, File, FileInfo)", "Asynchronous Programming (async, await)", 
    "Multithreading (Thread, Task, Parallel)", "Reflection and Metadata", "Attributes and Annotations", 
    "Memory Management and Garbage Collection", "Dynamic Types and ExpandoObject", 
    "Pattern Matching (C# 7+)", "Nullable Reference Types (C# 8+)", 
    "Records and Init-only Properties (C# 9+)", "Top-Level Statements (C# 9+)", 
    "File-scoped Namespaces (C# 10+)", "Dependency Injection (DI)", 
    "Working with JSON (System.Text.Json, Newtonsoft.Json)", "Unit Testing (NUnit, xUnit, MSTest)", 
    "Creating and Consuming APIs (ASP.NET Core)", "Entity Framework and ORM Concepts", 
    "Configuration and AppSettings", "Security and Authorization (JWT, OAuth2)", 
    "RESTful Services and Controllers", "Model-View-Controller (MVC)", 
    "Middleware and Request Pipeline", "SignalR for Real-time Communication", 
    "Working with Databases (SQL Server, SQLite)", "Code First and Database First Approaches"
],
"Lua": [
    "Basic Syntax and Program Structure", "Variables and Data Types (nil, boolean, number, string, table, function)", 
    "Operators (Arithmetic, Relational, Logical, Concatenation)", "Control Structures (if, elseif, else, switch workaround)", 
    "Loops (while, repeat-until, for)", "Functions and Anonymous Functions", "Multiple Return Values", 
    "Tables (as arrays, dictionaries, and objects)", "Metatables and Metamethods", 
    "Closures and Upvalues", "Scoping Rules (local vs global)", "String Manipulation Functions", 
    "Error Handling (pcall, xpcall)", "Coroutines and Cooperative Multitasking", 
    "Modules and `require`", "Iterators and the `pairs`, `ipairs` functions", 
    "The `load`, `loadstring`, and `dofile` Functions", "Garbage Collection", 
    "Debug Library and Introspection", "Environment Tables and Sandboxing", 
    "Lightweight Object-Oriented Programming using Tables and Metatables", 
    "Embedding Lua in C/C++ Applications", "Using Lua as a Configuration Language", 
    "LuaJIT and Performance Optimization", "Scripting in Game Engines (e.g., Roblox, LOVE2D)"
],
"Rust": [
    "Basic Syntax and Program Structure", "Variables, Constants, and Shadowing", "Data Types (Scalar and Compound)", 
    "Ownership and Borrowing", "References and the Borrow Checker", "Mutable vs Immutable References", 
    "Slices and String Slices", "Control Flow (if, match, loop, while, for)", 
    "Functions and Return Values", "Closures and Capture Rules", "Pattern Matching", 
    "Enums and `match` Expressions", "Structs and Tuple Structs", "Traits and Trait Bounds", 
    "Generics and Lifetimes", "Modules and `mod`, `pub`, `use`", "Error Handling (`Result`, `Option`, `unwrap`, `?`)", 
    "Collections (`Vec`, `HashMap`, `HashSet`)", "Iterators and the Iterator Trait", 
    "Ownership in Loops and Closures", "Smart Pointers (`Box`, `Rc`, `RefCell`)", 
    "Interior Mutability", "Concurrency and Multithreading (`thread`, `Mutex`, `Arc`)", 
    "Async Programming (`async`, `await`, `tokio`, `futures`)", 
    "Macros (`macro_rules!`, procedural macros)", "Unsafe Rust and Raw Pointers", 
    "Memory Management without Garbage Collector", "Crates and Cargo Package Manager", 
    "Testing and Unit Tests (`#[test]`)", "Attributes and Derive Macros", 
    "Lifetime Annotations and Elision Rules", "Zero-cost Abstractions", 
    "Functional Programming Concepts in Rust", "Error Propagation and Custom Errors", 
    "Compile-time Safety and Performance Optimization", "FFI (Foreign Function Interface)", 
    "Documentation with `rustdoc`", "Pattern Destructuring", "Shadowing vs Mutability", 
    "Working with External Crates", "Binary vs Library Crates", "Ownership in Function Calls and Structs"
],
"R": [
    "Basic Syntax and Program Structure", "Variables and Data Types (Numeric, Integer, Character, Logical, Factor, Date)", 
    "Vectors and Vector Operations", "Matrices and Matrix Operations", "Lists and List Operations", 
    "Data Frames and Data Frame Operations", "Factors and Factor Levels", "Control Flow (if, else, for, while, repeat)", 
    "Functions and Function Arguments", "Anonymous Functions", "Apply Functions (`apply`, `lapply`, `sapply`, `tapply`)", 
    "Vectorized Operations", "Working with Missing Data (NA, NaN, NULL, is.na(), na.omit())", "String Manipulation (`gsub`, `grep`, `strsplit`)", 
    "Data Import/Export (read.csv, read.table, write.csv, readRDS, writeRDS)", "Subsetting Data (indexing, `subset()`, `dplyr`)", 
    "Dplyr and Tidyverse for Data Manipulation", "Data Visualization (base R, `ggplot2`)", 
    "Statistical Functions (mean, median, sd, var, cor, summary)", "Probability Distributions (normal, binomial, Poisson, etc.)", 
    "Hypothesis Testing (t-test, chi-squared, ANOVA)", "Linear Regression and Generalized Linear Models", 
    "Logistic Regression", "Multivariate Analysis", "Time Series Analysis and Forecasting (`ts`, `zoo`, `xts`)", 
    "Correlation and Covariance", "Resampling Methods (Bootstrapping, Cross-Validation)", "Clustering (k-means, hierarchical)", 
    "Principal Component Analysis (PCA)", "Random Forests and Decision Trees", "Neural Networks in R", 
    "Package Development", "Working with R Markdown and R Notebooks", "Parallel Processing in R (`parallel`, `foreach`)", 
    "RStudio IDE Features", "Writing R Scripts and Functions", "Object-Oriented Programming in R (`S3`, `S4`, `R6`)", 
    "Rcpp for C++ Integration", "Shiny for Interactive Web Applications", "Interactive Visualizations with `plotly`", 
    "Data Cleaning and Transformation with `tidyr`", "Working with APIs in R", "Integrating R with SQL Databases", 
    "Creating Reports with `rmarkdown`", "Interactive Data Visualization with `leaflet`", 
    "R for Machine Learning and Deep Learning (`caret`, `tensorflow`, `keras`)"
],
"Julia": [
    "Basic Syntax and Program Structure", "Variables and Data Types (Int, Float, String, Bool, Tuple, Array, Dict)", 
    "Control Flow (if, else, for, while, begin-end)", "Functions and Multiple Return Values", 
    "Anonymous Functions and Closures", "Broadcasting and Vectorization", 
    "Immutability and Mutability", "Arrays and Multidimensional Arrays", 
    "Tuples, Named Tuples, and Structs", "Type System and Type Annotations", 
    "Dynamic Typing vs Static Typing", "Type Hierarchies and Abstract Types", 
    "Multiple Dispatch (Method Overloading)", "Working with Modules and Packages", 
    "File I/O (open, read, write, close)", "Error Handling (`try-catch`)", 
    "String Manipulation (string interpolation, regular expressions)", "Meta-programming", 
    "Macros in Julia", "Garbage Collection and Memory Management", 
    "Parallel and Distributed Computing (multi-threading, `SharedVector`)", 
    "Asynchronous Programming (coroutines, `@async`, `@sync`)", 
    "DataFrames and Working with Tables", "Plotting and Visualization (using `Plots.jl`, `Makie.jl`)", 
    "Working with Scientific Libraries (e.g., `DifferentialEquations.jl`, `JuMP.jl`)", 
    "Linear Algebra and Matrix Operations", "Optimization (Convex.jl, JuMP.jl)", 
    "Interfacing with C and Python (using `PyCall` and `Ccall`)", 
    "Julia's Just-in-Time (JIT) Compilation", "Working with External Libraries (using `Pkg`)", 
    "Unit Testing in Julia", "Parallel Computing with `SharedVector` and `@everywhere`", 
    "Performance Optimization (benchmarking with `BenchmarkTools.jl`)", "Building and Distributing Packages", 
    "Julia for Data Science (using `DataFrames.jl`, `CSV.jl`)", "Building Web Applications in Julia (e.g., `Genie.jl`)", 
    "Creating REST APIs in Julia", "Julia for Machine Learning (using `Flux.jl`, `Knet.jl`)", 
    "Automatic Differentiation in Julia", "Julia for Numerical Simulations", 
    "Interfacing with Databases (using `SQLite.jl`, `ODBC.jl`)", "Working with JSON and CSV files", 
    "Type Stability and Performance Considerations"
],
"Scala": [
    "Basic Syntax and Program Structure", "Variables and Data Types (Int, Long, Float, Double, Boolean, String, Char)", 
    "Control Flow (if, else, match, while, for)", "Functions and Parameters", "First-Class Functions and Anonymous Functions", 
    "Pattern Matching", "Tuples and Case Classes", "Immutable vs Mutable Collections", 
    "List, Set, Map, and Other Collections", "Option, Some, and None (Option Type)", 
    "For-Comprehensions", "Classes and Objects", "Constructors (Primary and Auxiliary)", 
    "Inheritance and Polymorphism", "Abstract Classes and Traits", "Mixins and Traits", 
    "Companion Objects", "Case Classes and Pattern Matching with Case Classes", "Type Inference and Type System", 
    "Generics and Type Parameters", "Type Bounds (Upper, Lower Bounds)", "Variance (Covariant, Contravariant)", 
    "Implicit Parameters and Implicit Conversions", "Type Classes", "Higher-Order Functions", 
    "For Comprehensions and Monads", "Lazy Evaluation and Lazy Collections", 
    "Concurrency with Futures and Promises", "Akka for Actor-based Concurrency", 
    "Concurrency and Parallelism with `scala.concurrent`", "Collections and Immutable Data Structures", 
    "Stream Processing and `Stream` Library", "Functional Programming Paradigm", "Currying and Partial Functions", 
    "Pattern Matching with Sealed Traits", "Error Handling (`Option`, `Either`, `Try`)", 
    "Scalaâ€™s Collections Library (`List`, `Vector`, `Set`, `Map`)", "Immutable Data Structures in Detail", 
    "Monads and Functional Programming", "Scala's Integration with Java", 
    "Reflection in Scala", "Building and Using DSLs in Scala", "Scala for Big Data (Apache Spark, Scala API)", 
    "Scala for Machine Learning (using `Breeze`, `Spark MLlib`)", "Creating REST APIs with Scala (Akka HTTP, Play Framework)", 
    "Testing in Scala (ScalaTest, Specs2)", "Building Scala Applications with sbt", 
    "Scala's Standard Library (e.g., `scala.io`, `scala.math`)", "Working with JSON (using `circe` or `Play-JSON`)", 
    "Immutable Data Structures and Persistent Collections", "Scalaâ€™s Compatibility with JVM Ecosystem", 
    "Reactive Programming with `Akka Streams`", "Scala for Functional Programming in Practice", 
    "Performance Optimizations in Scala (JVM Tuning)"
],
"MATLAB": [
    "Basic Syntax and Program Structure", "Variables and Data Types (numeric, logical, char, cell, struct)", 
    "Control Flow (if, else, switch, for, while)", "Functions and Anonymous Functions", 
    "Script Files vs Function Files", "Matrix Operations and Linear Algebra", "Vectors and Arrays", 
    "Cell Arrays and Struct Arrays", "Data Types: Double, Single, Integer Types", "Indexing and Slicing Arrays", 
    "Plotting and Visualization (using `plot`, `scatter`, `surf`, `bar`)", "File I/O (load, save, fopen, fclose)", 
    "Working with Text Files and CSV Files", "Control Structures for Looping and Conditional Execution", 
    "Vectorized Operations and Array Operations", "Mathematical Functions (trigonometric, logarithmic, etc.)", 
    "Random Number Generation and Probability Distributions", "Linear Regression and Curve Fitting", 
    "Optimization and Solvers (e.g., `fminsearch`, `fminunc`)", "Symbolic Math Toolbox", 
    "Handling Complex Numbers", "Solving Equations and Systems of Equations", 
    "Matlab Toolboxes for Specific Domains (e.g., Signal Processing, Image Processing)", 
    "Simulink for Model-Based Design", "MATLAB App Designer for GUI Creation", 
    "Working with MATLAB's Graphics System", "MATLAB's Object-Oriented Programming (OOP)", 
    "MATLAB's `handle` and `value` classes", "Working with Large Datasets and Parallel Computing", 
    "Using MATLAB for Machine Learning (`fitcknn`, `svm`, etc.)", "MATLAB for Data Analysis and Statistics", 
    "Advanced Plotting and Customization (using `subplot`, `xlabel`, `legend`, etc.)", 
    "MATLAB for Simulations and Simulink Integration", "Matlab Compiler and Deployment", 
    "MATLAB's Integration with Other Languages (C, Java, Python)", 
    "MATLAB for Signal Processing (FFT, Filter Design, Filtering)", 
    "Image Processing with MATLAB (`imread`, `imshow`, `imwrite`)", "MATLAB for Control Systems and System Dynamics", 
    "MATLAB for Computational Biology and Bioinformatics", "MATLAB for Financial Modeling", 
    "Parallel Computing and GPU Computing with MATLAB", 
    "MATLAB's Integration with Databases", "MATLAB for Big Data Analytics", 
    "Working with Time Series Data and Temporal Data", 
    "Custom MATLAB Functions and Script Writing", "MATLABâ€™s Code Optimization Techniques", 
    "MATLAB for Scientific Research and Simulations", "Error Handling and Debugging in MATLAB", 
    "MATLAB Compiler for Creating Standalone Applications"
],
"Kotlin": [
    "Basic Syntax and Program Structure", "Variables and Data Types (Int, Float, String, Boolean, Char, Double, Array)", 
    "Control Flow (if, else, when, for, while)", "Functions and Lambda Expressions", 
    "Null Safety and Nullable Types", "Type Inference and Type System", "Data Classes and Sealed Classes", 
    "Destructuring Declarations", "String Templates and String Interpolation", "Collections (List, Set, Map)", 
    "Mutable vs Immutable Collections", "Working with Lists and Arrays", "Higher-Order Functions", 
    "Extension Functions", "Default and Named Arguments", "Varargs (Variable-length Argument Lists)", 
    "Inheritance and Polymorphism", "Abstract Classes and Interfaces", "Delegation (by keyword)", 
    "Companion Objects and Object Declarations", "Singleton Pattern in Kotlin", "Object-Oriented Programming in Kotlin", 
    "Functional Programming Concepts", "Lazy Initialization and Delegated Properties", 
    "Generics and Type Parameters", "Variance in Generics (Covariant, Contravariant)", 
    "Sealed Classes and Pattern Matching", "Coroutines for Asynchronous Programming", 
    "Exception Handling (try, catch, finally)", "Kotlin Standard Library (`let`, `apply`, `run`, `also`)", 
    "Kotlin Scripting and REPL (Read-Eval-Print Loop)", "Kotlin for Android Development", 
    "Working with JSON (using `Gson`, `Moshi`)", "Kotlin for Web Development (using `Ktor`)", 
    "Kotlin Multiplatform (for sharing code across platforms)", "Kotlin for Data Science (using `KotlinDL`, `Kotlin DataFrame`)", 
    "Kotlin for Server-Side Programming (using `Ktor` or `Spring Boot`)", 
    "Testing in Kotlin (using `JUnit`, `Kotest`, `Mockk`)", "Building Kotlin DSLs (Domain-Specific Languages)", 
    "Kotlin Reflection", "Kotlin with Java Interoperability", "Kotlin for Functional Programming", 
    "Working with Kotlinâ€™s `Flow` and `StateFlow`", "Kotlin for Reactive Programming (with `RxKotlin`)", 
    "Kotlin for Machine Learning (using `KotlinDL`)", "Kotlin for IoT (Internet of Things)", 
    "Kotlin for Cloud-Native Development (using `Ktor`, `Spring Boot`)", 
    "Kotlin for Mobile Development (Android, KMM)", "Kotlin Native for Cross-Platform Applications", 
    "Coroutines vs Threads", "Kotlin Serialization (`kotlinx.serialization`)", 
    "Kotlin with SQL and Databases (using `Exposed` or `SQLDelight`)"
],
"Swift": [
    "Basic Syntax and Program Structure", "Variables and Constants (let, var)", "Data Types (Int, Float, Double, String, Bool, Array, Dictionary, Set)", 
    "Control Flow (if, else, switch, for, while, repeat-while)", "Optionals (Optional Binding, Optional Chaining)", 
    "Guard Statements", "Functions and Closures", "Higher-Order Functions (map, filter, reduce)", 
    "Tuple and Named Tuples", "String Interpolation", "Arrays and Collections", 
    "Dictionaries and Sets", "Enumeration Types", "Structs vs Classes", 
    "Properties (Stored, Computed, and Lazy Properties)", "Methods and Instance Methods", 
    "Inheritance and Polymorphism", "Protocol-Oriented Programming", "Delegation Pattern", 
    "Error Handling (try, catch, throw, do-catch)", "Optionals and Nil-Coalescing Operator", 
    "Closures and Closures Expressions", "Swift Standard Library (Array, Dictionary, Set, String)", 
    "Swift UI (Declarative UI Framework)", "Protocols and Protocol Extensions", 
    "Generics and Generic Functions", "Extensions and Protocols", 
    "Memory Management (ARC - Automatic Reference Counting)", "Automatic Memory Management with ARC", 
    "Swift Playgrounds for Interactive Learning", "Concurrency with Grand Central Dispatch (GCD)", 
    "Concurrency with Swift Concurrency (`async/await`)", "ARC and Memory Leaks", 
    "Swift Package Manager (SPM)", "Swift for iOS Development (UIKit, SwiftUI)", 
    "Swift for macOS, tvOS, and watchOS", "Swift for Networking (URLSession, JSON Parsing)", 
    "Swift for Animation (using Core Animation)", "Building Custom Views and Controls in Swift", 
    "Swift for Data Persistence (Core Data, UserDefaults)", "KVO and KVC (Key-Value Observing and Coding)", 
    "Swift for REST API Integration", "Swift for Firebase Integration", 
    "Design Patterns in Swift (MVC, MVVM, Singleton, Factory)", "Unit Testing in Swift", 
    "Swift for Unit Testing (`XCTest`)", "Swift for Performance Optimization", 
    "Swift for Reactive Programming (using `Combine`)", "Swift for Cloud Integration (CloudKit, Firebase)", 
    "Swift for Mobile Development (iOS, watchOS, tvOS)", "Creating Swift Frameworks", 
    "Debugging and Profiling in Swift (Instruments, Xcode Debugger)", "Swift for Game Development (SpriteKit, SceneKit)", 
    "Swift for Machine Learning (using `CoreML`)", "Swift for Augmented Reality (using `ARKit`)", 
    "Swift for Networking and Web Requests (URLSession, Alamofire)", 
    "Swift for UI Testing (using `XCUITest`)", "Swift for Localization and Internationalization", 
    "Swift for Asynchronous Programming (using `DispatchQueue`, `async/await`)", 
    "Swift for Security (Keychain, App Transport Security)", "Swift and Appleâ€™s Ecosystem Integration (iCloud, Push Notifications, Apple Pay)"
],
"Dart": [
    "Basic Syntax and Program Structure", "Variables and Constants (var, final, const)", "Data Types (int, double, String, bool, List, Set, Map)", 
    "Control Flow (if, else, switch, for, while, do-while, for-in)", "Functions and Lambda Expressions", 
    "Named Parameters and Default Parameters", "Anonymous Functions and Closures", 
    "Null Safety (nullable types, null-aware operators)", "Type Inference and Strong Typing", 
    "String Interpolation", "Collections (List, Set, Map)", "List Operations (add, remove, map, filter)", 
    "Sets and Maps in Dart", "Generics and Type Parameters", "Iterable and Stream (Synchronous, Asynchronous)", 
    "Extension Methods", "Async and Await for Asynchronous Programming", 
    "Futures and Streams (handling asynchronous data)", "Exception Handling (try, catch, throw, on)", 
    "Classes and Objects", "Constructors (Named, Default, and Factory Constructors)", 
    "Static Members and Methods", "Getters and Setters", "Inheritance and Polymorphism", 
    "Abstract Classes and Interfaces", "Mixins", "Enums", 
    "Abstract and Interface Types", "Dart Collections and Iterables", "Dartâ€™s Library (`dart:core`, `dart:async`)", 
    "Streams and Reactive Programming", "Dartâ€™s Built-In Libraries (math, io, async, convert)", 
    "Dart for Flutter Development", "Widgets and Flutter UI Framework", "State Management in Flutter", 
    "Building Responsive Layouts with Flutter", "Working with Forms and Validation in Flutter", 
    "Handling User Input and Gestures in Flutter", "Navigation and Routing in Flutter", 
    "Asynchronous Programming in Flutter with Dart", "Testing in Dart and Flutter", 
    "Unit Testing with `test` package", "Integration Testing in Flutter", "Dart for Mobile Development (using Flutter)", 
    "Dart for Web Development (using `dart2js`, `dartdevc`)", 
    "Dart for Command-Line Applications", "Creating Packages and Libraries in Dart", 
    "Dart VM and Compilation to Native Code", "Memory Management in Dart", "Dart for Server-Side Development", 
    "Using Dart with Firebase", "Dart for Building REST APIs", "Building and Publishing Dart Packages", 
    "Dart DevTools for Debugging", "Working with Databases in Dart (using `sqflite` for SQLite)", 
    "Dart for Testing and Test-Driven Development (TDD)", "Dartâ€™s `async` package for working with asynchronous data", 
    "Building Cross-Platform Apps with Flutter and Dart", "Custom Dart Packages for Reusability", 
    "Handling JSON and HTTP Requests in Dart", "Dart for IoT and Embedded Systems", 
    "Concurrency and Parallelism in Dart", "Dart and Flutter for Animation", 
    "Creating and Using Flutter Plugins", "Dart for State Management (Provider, Riverpod, Bloc, etc.)"
],
"Bash": [
    "Basic Syntax and Script Structure", "Variables and Data Types (String, Integer, Array)", 
    "Command Substitution", "Standard Input, Output, and Error (stdin, stdout, stderr)", 
    "Conditional Statements (if, else, elif, test, [[ ]])", "Loops (for, while, until)", 
    "Functions in Bash", "Positional Parameters ($1, $2, ..., $@, $#)", "Arrays and Indexed Arrays", 
    "String Manipulation (substring, length, pattern matching)", "Arithmetic Operations in Bash", 
    "Using `let`, `$(( ))`, and `expr` for calculations", "File Handling (read, write, append, redirect)", 
    "File Test Operators (e.g., `-f`, `-d`, `-e`, `-s`)", "Working with Directories (cd, mkdir, rmdir, pwd)", 
    "Permissions and File Ownership (`chmod`, `chown`, `chgrp`)", "Pattern Matching with `[[ ]]` and `case`", 
    "Input and Output Redirection (>, >>, <, 2>", "Pipes and Pipelines (`|`)", 
    "Process Management (`ps`, `top`, `kill`, `jobs`, `bg`, `fg`)", "Background and Foreground Processes", 
    "Trap Command for Signal Handling", "Error Handling and Exit Status (`$?`, `exit`, `return`)", 
    "Bash Debugging (`set -x`, `set -e`)", "Using `grep`, `awk`, `sed` for text processing", 
    "Regular Expressions in Bash", "Using `sed` for stream editing", "Using `awk` for pattern scanning and processing", 
    "Working with `find`, `locate`, and `which` for file searching", "Reading User Input (`read`)", 
    "Command Line Arguments ($1, $2, ..., $@, $* , $#)", "Scripting with `cron` for Scheduled Jobs", 
    "Using `eval` for Dynamic Code Execution", "Bash Subshells and Process Substitution", 
    "Bash Arithmetic with `let`, `$(( ))`, and `expr`", "Working with `tar`, `zip`, `gzip`, `bzip2` for file compression", 
    "Creating and Using Shell Scripts", "Bash Functions and Local Variables", 
    "Redirection with `tee`", "Working with `curl` and `wget` for HTTP Requests", 
    "Automating Tasks with Shell Scripts", "Using `scp`, `rsync`, `ftp`, and `sftp` for file transfer", 
    "Using `ssh` for Remote Access", "Basic Networking Commands (`ping`, `ifconfig`, `netstat`)", 
    "Process Management (`ps`, `kill`, `bg`, `fg`, `wait`)", "Shell Aliases and Functions", 
    "Command Substitution (`$(command)`, ``command``)", "Working with Environment Variables (`$PATH`, `$HOME`)", 
    "Working with Configuration Files (`.bashrc`, `.bash_profile`)", "Using `grep`, `cut`, and `sort` for data extraction", 
    "Scripting for System Administration", "Security in Bash Scripting (permissions, sudo, user management)", 
    "Using `curl` for API Requests", "Working with JSON in Bash (using `jq`)", 
    "Managing Software Packages in Linux (using `apt`, `yum`, `dpkg`, `rpm`)", 
    "Monitoring System Resources (using `top`, `free`, `df`, `du`)", "Scripting for Backup Automation", 
    "Advanced Shell Scripting Techniques", "Shell Script Performance Optimization", 
    "Creating and Managing Bash Scripts for DevOps Automation", "Using `git` and Bash for Version Control"
],
"Perl": [
    "Basic Syntax and Program Structure", "Variables (Scalar, Arrays, Hashes)", "Data Types (Scalar, Array, Hash, References)", 
    "Control Flow (if, else, elsif, unless, for, foreach, while, do-while)", "Regular Expressions (Pattern Matching)",
    "String Manipulation (concatenation, interpolation, substitution)", "Array Operations (push, pop, shift, unshift, splice)", 
    "Hash Operations (keys, values, each, delete)", "Subroutines (functions)", "Passing Arguments to Functions", 
    "Variable Scope (lexical, global)", "References and Dereferencing", "File Handling (open, read, write, close, seek)", 
    "Input and Output (STDIN, STDOUT, STDERR, `<>` operator)", "Command-Line Arguments (`@ARGV`)", 
    "Working with Files and Directories (`opendir`, `readdir`, `mkdir`, `rmdir`)", "Exception Handling (`eval`, `die`, `warn`)", 
    "Perl's Object-Oriented Programming (OOP) Support", "Using `bless` and `package` for Object Creation", 
    "Inheritance and Polymorphism", "Method Overloading", "Autoloading", "Namespaces and Packages", 
    "Modules and CPAN (Comprehensive Perl Archive Network)", "Regular Expression Modifiers (`i`, `g`, `s`, etc.)", 
    "Pattern Matching and Capturing Groups", "Backreferences and Named Groups", "Perl's `split` and `join` Functions", 
    "Working with Dates and Times (using `Time::Local` and `Date::Parse`)", "String and Data Encoding (UTF-8, ASCII, etc.)", 
    "Perl for Web Development (CGI, Template Toolkit, Dancer, Mojolicious)", "Using `LWP::UserAgent` for HTTP Requests", 
    "Using `DBI` for Database Interaction (MySQL, PostgreSQL)", "Perl's `fork` for Process Management", 
    "Signal Handling and Traps", "Using `tie` for Associative Arrays", "Unit Testing in Perl (`Test::Simple`, `Test::More`)", 
    "Debugging in Perl (`perl -d`, `Carp`, `Data::Dumper`)", "Perl for Networking (Sockets, `IO::Socket`)", 
    "Multithreading in Perl (`threads`, `Thread::Queue`)", "Perl for Parsing (using `Parse::RecDescent`)", 
    "Using `JSON` and `XML` in Perl", "Working with Regular Expressions in Perl (`QR`, `//`, `m//`, `s///`)", 
    "File and Directory Traversal in Perl", "Perl for System Administration and Automation", 
    "Perl's `System()` and `exec()` for Running External Commands", "Using `DBM::Deep` and `Storable` for Serialization", 
    "Perl for Bioinformatics (using `BioPerl`)", "Creating Web Services with Perl (SOAP, REST)", 
    "Perl for Data Analysis (using `PDL` or `Statistics::Lite`)", "Memory Management and Garbage Collection in Perl", 
    "Optimizing Perl Code for Performance", "Using `Regexp::Assemble` for Efficient Regex Matching", 
    "Creating and Using Perl Modules", "Managing Dependencies with `cpanm`", "Perl for Automation (cron jobs, scripts)", 
    "Perl for Cloud Computing (using AWS SDK, Perl scripts for cloud automation)"
],
"Powershell": [
    "Basic Syntax and Command Structure", "Variables and Data Types (String, Integer, Array, HashTable)", 
    "Operators (Arithmetic, Logical, Comparison, Assignment)", "Control Flow (if, else, elseif, switch)", 
    "Loops (for, foreach, while, do-while, foreach-object)", "Functions and Cmdlets", 
    "Command-Line Arguments and Parameters", "Pipelines (`|`)", "Working with Objects and Properties", 
    "String Manipulation (substring, concatenation, replacement, formatting)", "Working with Files and Directories (Get-Item, Set-Item, Remove-Item)", 
    "File System Navigation (Get-ChildItem, Set-Location, Push-Location, Pop-Location)", 
    "File Redirection (Out-File, Out-Null, Tee-Object)", "Error Handling (Try, Catch, Finally, Throw, $Error)", 
    "Working with Arrays and Collections (Add, Remove, Sort, Filter)", "HashTables and Dictionaries", 
    "Regular Expressions in PowerShell (Select-String, -match, -replace)", "Working with Dates and Times (Get-Date, Add-Date)", 
    "Using `Select-Object`, `Where-Object`, `Sort-Object` for Object Manipulation", 
    "Using `ConvertTo-Json` and `ConvertFrom-Json` for JSON Handling", "Remote Management (Invoke-Command, Enter-PSSession, Exit-PSSession)", 
    "Using `Get-Process`, `Stop-Process`, `Start-Process` for Process Management", "Background Jobs and Task Scheduling", 
    "Working with Modules and Cmdlets", "Creating and Using PowerShell Scripts (.ps1 files)", 
    "Creating Functions and Reusable Code", "Pipeline Input and Output", "PowerShell Error Handling (`$Error`, `Try/Catch`)", 
    "Working with Web Requests (`Invoke-RestMethod`, `Invoke-WebRequest`)", 
    "Scripting for Windows Administration (User Management, Services, Registry, Event Logs)", 
    "PowerShell Remoting and Automation", "Creating Custom Cmdlets", "Accessing and Modifying Windows Services (Get-Service, Start-Service, Stop-Service)", 
    "Accessing and Modifying Windows Event Logs (Get-EventLog, Clear-EventLog)", "Working with Windows Registry (Get-ItemProperty, Set-ItemProperty)", 
    "Working with Windows Scheduled Tasks (New-ScheduledTask, Get-ScheduledTask)", "PowerShell for Cloud Automation (Azure, AWS)", 
    "PowerShell Desired State Configuration (DSC)", "Security Features (Get-ACL, Set-ACL, Execution Policy)", 
    "PowerShell Remoting and Remote Sessions", "PowerShell Jobs and Asynchronous Execution", 
    "Using `Get-Help`, `Get-Command`, and `Get-Module` for PowerShell Help and Discovery", 
    "Modules and Profiles in PowerShell", "Exporting and Importing Data (Export-CSV, Import-CSV, Export-Clixml, Import-Clixml)", 
    "Scripting for Software Deployment", "PowerShell for System Monitoring (CPU, Memory, Disk Usage)", 
    "Accessing Windows Event Logs and WMI (Windows Management Instrumentation)", 
    "Using `New-Object` to Create .NET Objects", "PowerShell for Backup and Restore Automation", 
    "Working with PowerShell PSScriptAnalyzer for Code Quality", "PowerShell Classes and Object-Oriented Programming", 
    "Working with PowerShell in Azure (Azure PowerShell Module)", "PowerShell for Containerization and Docker", 
    "Working with PowerShell in DevOps Pipelines", "Automating Administrative Tasks with PowerShell", 
    "Using `Get-Content` and `Set-Content` for File Manipulation", "PowerShell for Security Automation (with `SecurityCenter`, `Windows Defender`)", 
    "Building and Managing PowerShell GUIs with `Windows Forms`", "PowerShell Profiles and Customization"
],
"Haskell": [
    "Basic Syntax and Program Structure", "Data Types (Int, Float, Double, Bool, Char, String)", 
    "Type Inference and Type System", "Pattern Matching", "Lists (creation, access, manipulation)", 
    "Tuples and Pairs", "Recursive Functions", "Higher-Order Functions", "Laziness and Lazy Evaluation", 
    "Type Classes and Polymorphism", "Creating Custom Data Types (using `data` and `newtype`)", 
    "The `Maybe` Type", "The `Either` Type", "List Comprehensions", "List Operations (map, filter, foldl, foldr)", 
    "The `Maybe` Monad", "The `IO` Monad", "Monads (Theory and Practice)", "Monadic Composition", 
    "Lazy Lists and Infinite Data Structures", "Functional Composition", "Partial Application", 
    "Currying and Partial Application", "Fold and Unfold", "Pattern Guards", "Using `let` and `where` Bindings", 
    "Recursion and Tail Recursion", "Function Composition (`(.)` operator)", "The `do` Notation in Monads", 
    "Understanding `foldl` and `foldr`", "Working with Functions as First-Class Citizens", 
    "The `Functor` and `Applicative` Type Classes", "The `Functor` Laws", "The `Monad` Type Class", 
    "The `Maybe` Monad for Handling Optional Values", "Error Handling in Haskell (using `Either`, `Maybe`)", 
    "Using `IO` for Input and Output", "Haskell's `Lazy Evaluation` for Efficiency", 
    "Creating and Using `type` Synonyms", "Working with Files (readFile, writeFile, appendFile)", 
    "Type Safety and Null Safety", "Pure Functions vs Impure Functions", "Working with Recursion and Base Cases", 
    "Understanding Referential Transparency", "Parallel and Concurrent Programming in Haskell", 
    "Using `forkIO` for Concurrency", "Haskell for Web Development (using `Yesod`, `Scotty`)", 
    "Haskell for Functional Reactive Programming (using `FRP`)", "Data Structures in Haskell (Lists, Trees, Maps)", 
    "Using `ST` Monad for Imperative Programming", "The `State` Monad", "Haskellâ€™s `Monad` Laws", 
    "Haskellâ€™s Type System and Type Safety", "Using `GHC` (Glasgow Haskell Compiler)", "Lazy Evaluation and Performance Optimization", 
    "Creating Custom Monads", "Haskell for Data Analysis and Scientific Computing", 
    "Working with JSON in Haskell (using `aeson`)", "Working with `lens` for Functional Programming", 
    "Using `QuickCheck` for Property-Based Testing", "Working with the `lens` Library for Functional Data Access", 
    "Understanding `Functor`, `Applicative`, and `Monad` in Depth", "Advanced Type Features (type families, GADTs)", 
    "The `arrow` type class", "Creating and Using Type-Level Programming (Type Families, Data Kinds)", 
    "Template Haskell for Meta-Programming", "Using `Cabal` for Package Management and Building Projects", 
    "Working with Databases (using `persistent`)", "Using `conduit` for Efficient I/O Streams", 
    "Haskell for Machine Learning and AI (using `hmatrix`, `tensorflow`)", "Haskellâ€™s Concurrency Model with STM", 
    "Creating Web APIs in Haskell (using `servant`)", "Using Haskell for Network Programming (with `Network` and `http-conduit`)", 
    "Functional Design Patterns in Haskell", "Optimizing Haskell Programs for Performance", 
    "Haskell for Cryptography (using `cryptonite`)", "Haskell for Blockchain Development", 
    "Understanding Haskellâ€™s Strong Typing System", "Working with `containers` for Data Structures", 
    "Memory Management in Haskell (using `GC`)", "Haskell for Big Data (using `hadoop` and `spark` bindings)", 
    "The `async` Library for Managing Asynchronous Programming"
],
"Elixir": [
    "Basic Syntax and Program Structure", "Data Types (Integer, Float, Atom, String, List, Tuple, Map, Keyword List)", 
    "Pattern Matching", "Recursion", "Immutable Data Structures", "Control Flow (if, unless, cond, case, with)", 
    "Anonymous Functions (lambda)", "Named Functions and Function Clauses", "Function Composition", 
    "List and Tuple Manipulation", "Tuples as Fixed-Length Containers", "Working with Strings", "List Comprehensions", 
    "Using the Pipe Operator (`|>`) for Function Composition", "Modules and Functions", "Creating and Using Modules", 
    "Using `IO` for Input and Output", "Working with Processes and Concurrency", "Concurrency and Parallelism in Elixir", 
    "Lightweight Processes (using `spawn`, `send`, `receive`)", "The Actor Model of Concurrency", 
    "Working with GenServers", "Elixir's Actor Model and Process Communication", "Supervision Trees and Fault Tolerance", 
    "Pattern Matching in Process Messages", "Processes and Process Links", "Error Handling (try, catch, throw, rescue)", 
    "Supervisor Strategy (one_for_one, rest_for_one, etc.)", "Process Monitoring (using `Process.monitor`, `Process.link`)", 
    "Creating and Managing Tasks (Task.async, Task.await)", "Using `GenServer` for State Management", 
    "Elixir's Immutable State and State Transition", "Using `Agent` for State Management", 
    "Concurrent Computation with Elixir Tasks", "Concurrency with `Task.async_stream`", 
    "Using `GenStage` for Stream Processing", "Building and Using Elixir Pipelines", 
    "Using `Enum` and `Stream` Modules for Data Transformation", "Working with `Map` and `Keyword` Lists", 
    "Working with Elixir Collections (List, Tuple, Map, Keyword)", "Error Handling and Exception Management in Elixir", 
    "Creating and Using Modules with Private and Public Functions", "Working with Time and Date", 
    "Using `Calendar` and `DateTime` for Time Management", "Elixir's Type System and Pattern Matching", 
    "Macros in Elixir for Meta-Programming", "Using `Erlang` Libraries from Elixir", 
    "Elixir and Erlang Interoperability", "Creating and Managing Processes with `spawn_link` and `Process.exit`", 
    "Concurrency with `Task`, `GenServer`, and `Agent` for State", "Elixir's Fault Tolerant Design with Supervisors", 
    "Distributed Programming in Elixir (Nodes, `Node.connect`, `Node.spawn`)","Elixir's Fault Tolerance and Hot Code Upgrades", 
    "Building Web Applications with Phoenix", "WebSockets and Channels in Elixir", 
    "Elixirâ€™s Use of the Erlang VM (BEAM) for Concurrency and Fault Tolerance", 
    "Using `Ecto` for Database Management and Querying", "Building APIs with Phoenix Framework", 
    "Creating and Running Migrations with `Ecto`", "Working with Elixir's `Mix` Tool for Project Management", 
    "Unit Testing with `ExUnit`", "Mocking and Stubbing with Elixir Tests", "Property-Based Testing in Elixir with `StreamData`", 
    "Elixir for Distributed Systems Programming", "Understanding Elixir's Hot Code Upgrade Mechanism", 
    "Concurrency in Elixir with `Task` and `GenServer`", "Building Distributed Systems in Elixir", 
    "Elixir's Support for Microservices and Fault Tolerance", "Using `ExDoc` for Documentation Generation", 
    "Using `Flow` for Data Processing Pipelines", "Creating a Real-Time Web Application with Phoenix Channels", 
    "Elixir's `NIF` for Native Integration", "Using `:erlang` for Direct Erlang Interaction", 
    "Monitoring and Profiling Elixir Applications", "Hot Code Swapping and Upgrades in Elixir", 
    "Elixir's `Task` and `GenServer` for Background Jobs", "Using `Dialyzer` for Static Analysis", 
    "Elixir and Kubernetes for Cloud-Native Applications", "Working with Elixir in Docker and Containers", 
    "Elixir for IoT (Internet of Things) Applications", "Elixir's Support for Functional Reactive Programming (FRP)"
],
"Erlang": [
    "Basic Syntax and Program Structure", "Data Types (Integer, Float, Atom, String, List, Tuple, Map, Binary)", 
    "Pattern Matching", "Recursion", "Immutability", "Control Flow (if, case, receive, cond)", 
    "Anonymous Functions", "Named Functions", "Tail Recursion", "Lists and Tuples", 
    "Error Handling (try, catch, throw, exit, receive)", "Working with Processes and Concurrency", 
    "Lightweight Processes", "Message Passing and Process Communication", "The Actor Model of Concurrency", 
    "The `spawn`, `send`, `receive` Functions", "Concurrency with Erlang's Processes", "Linking and Monitoring Processes", 
    "Supervision Trees for Fault Tolerance", "Error Propagation and Process Restarting", 
    "Using `GenServer` for State Management", "The `GenServer` Behaviour", "Supervisors and Supervision Trees", 
    "Creating and Managing Processes with `spawn_link` and `Process.exit`", "The `spawn` and `link` functions", 
    "Process Monitoring with `Process.monitor` and `Process.link`", "Creating Custom Behaviours", 
    "The `receive` Statement", "Working with Erlang's Process Registry", "Working with Shared State and `ETS` (Erlang Term Storage)", 
    "Working with `gen_fsm` for Finite State Machines", "Building and Using Erlang's `gen_event` for Event Handling", 
    "Immutable Data Structures (Lists, Tuples, Maps)", "Binary Data Handling in Erlang", 
    "Pattern Matching in Lists and Tuples", "Creating and Using Modules and Functions", 
    "Using Erlang's Built-in Functions (BIFs)", "Creating and Using Libraries in Erlang", "Working with Dates and Times", 
    "Handling Timeouts in Erlang (using `timer:send_after`, `receive`)", "The `erl` Shell", "Writing Concurrent Programs in Erlang", 
    "Building Distributed Systems in Erlang", "Node Communication in Erlang (using `net_adm:ping`)", 
    "Distributed Process Management in Erlang", "Erlang's Hot Code Upgrades", 
    "Fault Tolerance and Recovery in Erlang (using `gen_server`, `supervisor`)", 
    "Working with Mnesia for Database Management", "Erlang's `Mnesia` Database", "Building Scalable Systems with Erlang", 
    "Using Erlang's `cowboy` for HTTP Servers", "Creating Web Servers with Erlang", 
    "Writing and Managing HTTP APIs with Erlang", "Writing Distributed Applications in Erlang", 
    "Writing Concurrency-Intensive Systems in Erlang", "Using `Erlang/OTP` for Application Development", 
    "Understanding the `Erlang/OTP` Design Principles", "Testing in Erlang with `EUnit` and `Common Test`", 
    "Using `Dialyzer` for Static Analysis", "Property-Based Testing with `QuickCheck`", 
    "Working with `rebar3` for Project Management", "Erlang's `rebar3` for Build Automation", 
    "Creating Hot Code Upgrades in Erlang", "Building Scalable Services in Erlang", "Erlang for IoT Systems", 
    "Erlang for Distributed Databases", "Building Multi-Tier Web Applications in Erlang", 
    "Using `NIF` (Native Implemented Functions) for Performance", "Working with Erlang's `Erlang/OTP` Platform", 
    "Using `Erlang` for Blockchain Development", "Erlang's Support for Real-Time Systems", 
    "Interfacing Erlang with Other Languages (C, Java, Python)", "Erlang's Virtual Machine (BEAM)", 
    "Understanding Erlang's Memory Management", "Hot Code Upgrades and Deployment in Erlang", 
    "Optimizing Erlang Programs for Performance", "Using Erlang for High-Availability Systems", 
    "Concurrency and Parallelism with Erlang's Actor Model", "Writing Fault-Tolerant Software with Erlang", 
    "Using `emacs` with Erlang for Development", "Erlang for Messaging and Communication Systems"
],
"Lisp": [
    "Basic Syntax and Program Structure", "S-Expressions (Symbolic Expressions)", "Atoms and Lists", 
    "Variables and Bindings", "Cons Cells and Pairs", "Car and Cdr Operations", "List Manipulation (first, rest, cons)", 
    "Lambda Expressions and Anonymous Functions", "Higher-Order Functions", "First-Class Functions", "Recursion", 
    "Conditional Statements (if, cond, when, unless)", "Pattern Matching", "Defining Functions with `defun`", 
    "Defining Macros with `defmacro`", "Macros and Code Generation", "Closures", "Namespaces and Packages", 
    "Working with Lists and Arrays", "Functional Programming Paradigm", "Tail Recursion Optimization", 
    "Dynamic Typing in Lisp", "Dynamic Scoping vs. Lexical Scoping", "Garbage Collection", 
    "Symbols and Keywords", "Data Structures (Lists, Arrays, Hash Tables, Alists, Plists)", 
    "Creating and Using Structures with `defstruct`", "Error Handling (catch, throw)", "Exceptions in Lisp", 
    "Using the REPL (Read-Eval-Print Loop)", "Interactive Development with the REPL", "Working with Files and I/O", 
    "Using Libraries and Packages", "Importing and Using Modules", "Evaluation Model (Lazy and Strict Evaluation)", 
    "Continuations and Control Flow (call/cc)", "Nondeterministic Programming", "Concurrency in Lisp (using threads)", 
    "Multi-threading and Parallelism", "Concurrency and Shared State", "Lisp Streams and I/O Handling", 
    "Working with Regular Expressions", "Building and Using Lisp APIs", "Memory Management and Optimization", 
    "Data Persistence and Serialization", "Serialization with `cl-json` and Other Libraries", 
    "Using Lisp for Symbolic Computation", "Mathematical Computation in Lisp", "Lisp for AI and Machine Learning", 
    "Artificial Intelligence Techniques in Lisp", "Creating Lisp-based AI Systems", 
    "Lisp's Role in Natural Language Processing (NLP)", "Lisp and Symbolic Logic", 
    "Using Lisp for Graph Theory and Algorithms", "Functional Data Structures in Lisp", 
    "Using Lisp for Compiler Construction", "Building a Lisp Interpreter", "Lisp for Embedded Systems", 
    "Using `CFFI` for Interfacing with C", "Interfacing with C Libraries", "Lisp in Web Development (using Hunchentoot, CL-WHO)", 
    "Common Lisp Object System (CLOS)", "Creating Object-Oriented Systems with CLOS", 
    "Inheritance and Polymorphism in CLOS", "Method Combination in CLOS", "Multiple Inheritance in CLOS", 
    "Creating and Using Generic Functions", "Writing High-Performance Lisp Code", 
    "Optimizing Lisp Programs", "Building Large-Scale Applications with Lisp", "Lisp in the Real World", 
    "Using Lisp in Embedded Systems", "Lisp for High-Level Domain-Specific Languages (DSLs)", 
    "Cross-Platform Lisp Development", "Lisp on Different Platforms (Windows, Linux, macOS)", 
    "Using `Quicklisp` for Managing Lisp Libraries", "Building Command-Line Applications with Lisp", 
    "Using Lisp for Network Programming", "Lisp for Web Scraping and Data Analysis", 
    "Creating Lisp-based Games", "Lisp for GUI Development", "Creating a GUI Application in Lisp", 
    "Building Compilers and Interpreters in Lisp", "Developing a Lisp REPL", "Using Common Lisp for System Programming", 
    "Working with Lisp in AI Research", "Using Lisp for Machine Learning and Neural Networks", 
    "Lisp in Robotics", "Lisp for Mobile Applications", "Lisp's Role in Mathematical and Scientific Computing"
],
"Scheme": [
    "Basic Syntax and Program Structure", "S-Expressions and Lists", "Atoms and Symbols", 
    "Variables and Bindings (define, set!)", "The `lambda` Expression", "First-Class Functions", 
    "Higher-Order Functions", "Tail Recursion", "Recursion", "Conditionals (if, cond, case)", 
    "Pattern Matching", "List Manipulation (car, cdr, cons, append)", "Defining Functions with `define`", 
    "Anonymous Functions", "Local Definitions with `let`, `let*`, `letrec`", "Macros and Code Generation", 
    "Defining Macros with `define-macro`", "Lazy Evaluation and Streams", "Exception Handling", 
    "Error Handling with `catch`, `throw`, `try-catch`", "Dynamic Typing and Type System", 
    "The `apply` Function", "Recursion and Iteration", "Working with Data Structures (Lists, Pairs, Vectors, Hash Tables)", 
    "Working with Immutable Data", "List Comprehensions", "Destructive Operations (set-car!, set-cdr!)", 
    "First-Class Continuations (call/cc)", "Continuations and Control Flow", "First-Class Environments", 
    "Multiple Values (values, call-with-values)", "State and Mutable Objects", "Streams and Lazy Evaluation", 
    "Modules and Libraries", "The `define` Syntax", "Using `begin` for Sequencing", "Namespaces in Scheme", 
    "Working with Scheme's REPL", "Using Scheme for Interactive Development", "Handling Input/Output", 
    "File I/O in Scheme", "Working with External Libraries", "Building Custom Scheme Libraries", 
    "Scheme's Garbage Collection", "Scheme's Memory Management", "Scheme's Evaluation Model", 
    "The Role of the Environment Model in Scheme", "Scheme's Lexical Scoping", "Namespaces and Lexical Binding", 
    "Error Handling in Scheme", "Defining and Using Higher-Order Functions", 
    "Object-Oriented Programming in Scheme", "Using `define-record-type` for Structs", 
    "Building Custom Data Types in Scheme", "Functional Programming in Scheme", "Using `map`, `filter`, and `reduce`", 
    "Using `fold` and `unfold`", "Scheme for Artificial Intelligence", "Symbolic Computation", 
    "Parsing and Interpreting with Scheme", "Building a Scheme Interpreter", "Scheme in Compiler Design", 
    "Working with Scheme's REPL", "Scheme for Numerical Computation", "Scheme for Web Development (using Racket)", 
    "Concurrency in Scheme (using threads)", "Using Scheme for Parallel Programming", "Functional Patterns in Scheme", 
    "Scheme for Education", "Scheme's Role in Teaching Computer Science", 
    "Using Scheme to Implement Other Languages", "Scheme for Mathematical Computation", 
    "Working with Scheme's `guile` Interpreter", "Creating Domain-Specific Languages (DSLs) in Scheme", 
    "Using Scheme for Software Prototyping", "Scheme for Building Compilers and Interpreters", 
    "Scheme for Testing and Debugging", "Scheme's Role in Research and Development", 
    "Cross-Platform Scheme Development", "Scheme on Embedded Systems", "Scheme for Systems Programming"
],
"PL/SQL": [
    "PL/SQL Block Structure", "Anonymous Blocks", "Declarative Section", "Executable Section", 
    "Exception Handling Section", "Variables and Constants", "Data Types in PL/SQL", 
    "Control Structures (IF-THEN-ELSE, CASE)", "Loops (FOR, WHILE, LOOP)", "Cursor Handling", 
    "Implicit Cursors", "Explicit Cursors", "Cursor FOR Loops", "Cursor Variables", 
    "Handling Cursors (OPEN, FETCH, CLOSE)", "PL/SQL Functions", "PL/SQL Procedures", 
    "Stored Procedures and Functions", "Parameter Modes (IN, OUT, IN OUT)", 
    "Triggers in PL/SQL", "DML Triggers (BEFORE, AFTER, INSTEAD OF)", "DDL Triggers", 
    "Event-Based Triggers", "PL/SQL Packages", "Creating and Using Packages", 
    "Package Specification vs. Body", "Package Variables and Constants", "Package Functions and Procedures", 
    "Dynamic SQL in PL/SQL (EXECUTE IMMEDIATE)", "Exception Handling in PL/SQL", 
    "Predefined Exceptions (NO_DATA_FOUND, TOO_MANY_ROWS, etc.)", "User-Defined Exceptions", 
    "Raise and Reraise Exceptions", "Transaction Control (COMMIT, ROLLBACK, SAVEPOINT)", 
    "Bulk Processing (BULK COLLECT, FORALL)", "Collections in PL/SQL (Associative Arrays, Nested Tables, VARRAYs)", 
    "PL/SQL Record Types", "Handling Large Data (BLOB, CLOB)", "PL/SQL and SQL Integration", 
    "Using SQL in PL/SQL (SELECT INTO, INSERT INTO)", "PL/SQL and SQL Error Handling", 
    "Database Triggers in PL/SQL", "PL/SQL and Autonomous Transactions", "Using UTL_FILE for File I/O", 
    "PL/SQL Debugging", "PL/SQL Exception Propagation", "Ref Cursors", 
    "Working with Temporary Tables", "Subprograms in PL/SQL", "PL/SQL Packages for Code Reusability", 
    "Optimizing PL/SQL Code Performance", "PL/SQL Bulk Binding", "PL/SQL Tuning Techniques", 
    "Using `EXCEPTION_INIT` for Custom Exceptions", "PL/SQL Profiling and Tracing", 
    "Handling Recursive Queries in PL/SQL", "PL/SQL and Oracle Object Types", 
    "Working with Large Result Sets", "PL/SQL for Data Validation and Business Logic", 
    "PL/SQL for Reporting and Data Transformation", "User-Defined Types in PL/SQL", 
    "Advanced PL/SQL Features (Recursive Triggers, Compound Triggers)", 
    "PL/SQL and API Integration", "PL/SQL for Data Migration and ETL", 
    "Scheduling Jobs in PL/SQL (DBMS_SCHEDULER, DBMS_JOB)", 
    "Using PL/SQL in Oracle Forms and Reports", "PL/SQL for Web Applications", 
    "Using Oracle SQL*Plus with PL/SQL", "PL/SQL Performance Monitoring", 
    "Working with ORA-Errors", "PL/SQL and Exception Handling Best Practices", 
    "Using PL/SQL with Oracle Data Guard and RAC", "Working with External Procedures in PL/SQL", 
    "Managing PL/SQL Code with Version Control", "Oracle Database Security and PL/SQL", 
    "Using PL/SQL with Oracle APEX", "PL/SQL in Web Services", "Deploying PL/SQL to Production Environments"
],
"SAS": [
    "SAS System Overview", "SAS Data Steps", "SAS Procedures (PROCs)", "Data Step Programming", 
    "SAS Variables and Data Types", "Data Step Loops (DO, END, IF-THEN-ELSE)", "SAS Arrays", 
    "SAS Functions", "SAS Macro Language", "Data Input and Output in SAS", "Reading and Writing Data (INPUT, PUT)", 
    "SAS Formats and Informats", "Merging Datasets in SAS", "Concatenating Datasets in SAS", 
    "SQL in SAS (PROC SQL)", "SAS Data Set Management", "Sorting Data in SAS (PROC SORT)", 
    "SAS Dataset Modifications (APPEND, MERGE, MODIFY)", "Filtering and Subsetting Data (WHERE, IF)", 
    "Handling Missing Data in SAS", "Data Cleaning and Transformation", "SAS Formats and Functions for Data Analysis", 
    "Handling Large Datasets in SAS", "SAS Macro Variables", "Creating and Using Macros in SAS", 
    "Using Arrays for Efficient Data Manipulation", "Loops and Iterative Processing in SAS", 
    "Advanced Data Step Techniques", "PROC FREQ for Frequency Analysis", "PROC MEANS for Descriptive Statistics", 
    "PROC TRANSPOSE for Data Reshaping", "PROC PRINT for Data Display", "PROC UNIVARIATE for Statistical Analysis", 
    "PROC REG for Regression Analysis", "PROC TTEST for Hypothesis Testing", "PROC ANOVA for Analysis of Variance", 
    "PROC GLM for General Linear Models", "PROC FACTOR for Factor Analysis", "PROC CLUSTER for Cluster Analysis", 
    "PROC SURVEY for Survey Analysis", "PROC REPORT for Custom Reporting", "PROC IMPORT and EXPORT for Data Exchange", 
    "Creating and Using SAS Libraries", "SAS ODS (Output Delivery System)", "SAS Graphics (SG Procedures)", 
    "Customizing Output with ODS", "SAS Report Writing and Output Creation", "SAS and Excel Integration", 
    "SAS and Database Integration (ODBC, SQL Pass-Through)", "SAS on Hadoop and Big Data", "SAS and R Integration", 
    "SAS and Python Integration", "SAS Studio for Interactive Programming", "SAS Enterprise Guide for GUI-Based Analysis", 
    "SAS Visual Analytics for Data Visualization", "SAS Macros for Automating Repetitive Tasks", 
    "Using SAS for Time Series Analysis", "PROC TIMEID for Time Series Data", "PROC ARIMA for Time Series Forecasting", 
    "PROC VARMAX for Vector Autoregressive Models", "PROC STAT for Statistical Procedures", 
    "SAS for Predictive Modeling and Machine Learning", "PROC SCORE for Scoring Data Models", 
    "PROC GLIMMIX for Mixed Models", "PROC LIFETEST for Survival Analysis", "PROC LOGISTIC for Logistic Regression", 
    "PROC HPSPLIT for Decision Trees", "PROC SVM for Support Vector Machines", "PROC FOREST for Random Forest", 
    "PROC CLM for Categorical Data", "SAS for Data Mining and Data Preparation", "SAS for Text Analytics", 
    "SAS for Reporting and Dashboarding", "Creating Custom SAS Functions and Procedures", 
    "Debugging SAS Programs", "Optimizing SAS Code for Performance", "SAS Error Handling and Diagnostics", 
    "SAS User Interface (GUI vs. Code Editor)", "SAS for Data Visualization with SG Procedures", 
    "Building and Publishing SAS Reports", "Working with SAS Macro Variables", "SAS for Data Integrity", 
    "SAS for Data Auditing and Logging", "SAS for Real-Time Data Processing", "SAS for Cloud-Based Analytics", 
    "Working with SAS Data Management Tools", "SAS Data Quality and Validation", "SAS in Data Warehousing", 
    "SAS for Marketing Analytics", "SAS for Financial Analytics", "SAS for Healthcare Analytics", 
    "SAS for Risk Management", "SAS for Operational Analytics", "SAS for Supply Chain Analytics", 
    "SAS for Customer Analytics", "SAS for Fraud Detection", "SAS in Government Analytics", 
    "SAS Certification Preparation"
],
"Shell Scripting": [
    "Shell Scripting Basics", "Understanding the Shell", "Writing a Simple Shell Script", "Shell Script Execution", 
    "Making a Script Executable (chmod)", "Basic Shell Commands", "Variables in Shell Script", 
    "User Input in Shell Script (read command)", "Command-Line Arguments ($1, $2, etc.)", 
    "Conditionals (if, elif, else)", "Logical Operators (&&, ||)", "Switch-Case Statements (case, esac)", 
    "Loops (for, while, until)", "Loop Control (break, continue)", "Arrays in Shell Script", 
    "Functions in Shell Script", "Using External Commands in Shell Script", "Redirecting Output (>, >>)", 
    "Redirecting Input (<)", "Pipes (|) and Filters", "Reading Files in Shell Script", 
    "File Test Operators", "String Manipulation", "Arithmetic Operations in Shell Script", 
    "String Comparison", "Exit Status and Return Codes", "Handling Errors in Shell Script", 
    "Using Regular Expressions in Shell Scripts", "Advanced Pattern Matching", "Using `grep`, `sed`, `awk` in Shell", 
    "Cron Jobs and Scheduling Tasks", "Working with Files and Directories in Shell", 
    "Managing Processes with Shell Scripts", "Background and Foreground Processes", "Job Control (jobs, fg, bg, kill)", 
    "Process Substitution", "Shell Script Debugging (set -x, set -e)", "Writing Portable Shell Scripts", 
    "Using Environment Variables", "Configuration Files and Shell Initialization Files (.bashrc, .bash_profile)", 
    "Working with Log Files in Shell Script", "Text Processing with Shell Scripts", 
    "Using `cut`, `sort`, `uniq`, `tr`, `wc` for Text Manipulation", "Using `awk` for Field Processing", 
    "Working with Network Commands in Shell", "Creating Backups with Shell Scripts", 
    "Creating Simple Interactive Scripts", "Working with Databases in Shell (using SQL queries)", 
    "Creating Custom Scripts for System Administration", "Automating System Tasks", "Handling User Accounts in Shell", 
    "Creating and Managing Logs in Shell Script", "Shell Script Security Best Practices", 
    "Using `tar`, `gzip`, and `zip` for File Compression", "Archiving Files with Shell Scripts", 
    "Sending Emails from Shell Scripts", "Connecting to Remote Servers with SSH in Shell", 
    "Creating and Using Shell Libraries", "Version Control with Shell Scripts", "Running Shell Scripts on Remote Servers", 
    "Shell Script Performance Optimization", "Working with Docker and Containers in Shell Scripts", 
    "Automating Deployments with Shell Scripts", "Using Shell Scripts in CI/CD Pipelines", 
    "Shell Scripting for Cloud Infrastructure Automation", "Shell Scripting for DevOps", 
    "Monitoring System Health with Shell Scripts", "Creating Alerts and Notifications in Shell Scripts", 
    "Building Custom Shell Environments", "Advanced Shell Scripting Techniques", 
    "Shell Scripting for Data Processing", "Using Shell for Automation in Cloud Environments", 
    "Creating Custom Command-Line Tools with Shell Script", "Shell Scripting for Log Analysis", 
    "Scripting for File Synchronization", "Shell Scripting for Backup and Recovery", 
    "Shell Scripting for File Transfers (FTP, SCP)", "Using Git with Shell Scripts", 
    "Working with Shell Variables (local, global, special variables)", "Using Here Documents in Shell Scripts", 
    "Shell Scripting for Monitoring Server Resources", "Advanced Text Processing with `sed`, `awk`", 
    "Working with Arrays of Strings in Shell", "Shell Script Testing (unit tests, assertions)", 
    "Shell Script Documentation and Commenting", "Creating Cross-Platform Shell Scripts", 
    "Understanding Shell Execution Contexts (login vs non-login shells)"
],
"Actionscript": [
    "Introduction to ActionScript", "ActionScript Syntax", "Variables and Data Types in ActionScript", 
    "Operators (Arithmetic, Logical, Comparison)", "Control Structures (if, else, switch)", 
    "Loops (for, while, do-while)", "Functions and Methods", "Objects and Object-Oriented Programming", 
    "Classes and Inheritance in ActionScript", "Event Handling in ActionScript", "Mouse and Keyboard Events", 
    "Display Objects and Movie Clips", "Creating and Manipulating Movie Clips", 
    "ActionScript Timers and Delays (setTimeout, setInterval)", "Sound and Music in ActionScript", 
    "ActionScript for Animation", "Working with Bitmap and Vector Graphics", "Working with Text and Fonts", 
    "Handling User Input", "TextField and InputTextField Components", "Button Components in ActionScript", 
    "Creating and Managing Arrays", "Working with Collections (Array, ArrayCollection)", 
    "Error Handling in ActionScript (try, catch)", "Exception Handling and Debugging in ActionScript", 
    "Accessing External Files in ActionScript (XML, JSON)", "Working with Local Storage", 
    "Networking in ActionScript (HTTP, URLRequest, URLLoader)", "ActionScript for File Upload/Download", 
    "Loading External SWF Files and Assets", "Working with SharedObjects and Cookies", 
    "ActionScript for Communication (Socket, UDP, HTTP),", "Regular Expressions in ActionScript", 
    "Working with Flash and Flex APIs", "Application Programming Interfaces (APIs) in ActionScript", 
    "Using Libraries and Frameworks in ActionScript", "Working with XML in ActionScript", 
    "Serialization and Deserialization of Data", "Using ActionScript with Adobe Flash Player", 
    "Managing States in ActionScript", "State-based Programming with ActionScript", 
    "Tweening and Easing Functions", "ActionScript for Custom Controls and UI Elements", 
    "Interactive Content Creation with ActionScript", "Creating Games with ActionScript", 
    "Game Loops and Event Handling", "Collision Detection in ActionScript", "Animating Objects and Characters", 
    "Multimedia Integration (Video, Sound)", "Advanced Animation Techniques in ActionScript", 
    "3D Graphics and Animation in ActionScript", "ActionScript for Audio and Sound Effects", 
    "Advanced Object-Oriented Concepts (Polymorphism, Encapsulation)", 
    "Using Flex with ActionScript for Rich Internet Applications (RIA)", 
    "Handling Multiple Timelines and Animation Sequences", "ActionScript for Dynamic Content Loading", 
    "ActionScript for Mobile Development (AIR)", "Optimizing ActionScript for Performance", 
    "Debugging and Profiling ActionScript Code", "ActionScript and MVC Architecture", 
    "Testing and Unit Testing ActionScript Code", "Flash Player Security Model", "Cross-Domain Policy Files", 
    "Building Interactive Forms with ActionScript", "ActionScript for Web Integration", 
    "Creating Rich Internet Applications with ActionScript", "Publishing ActionScript Projects", 
    "Packaging and Deploying AIR Applications", "Creating Flash-based Applications with ActionScript", 
    "Building Social Media Applications with ActionScript", "Creating Custom Components in ActionScript", 
    "Handling Media Streaming with ActionScript", "Using ActionScript for Advertising and Interactive Ads", 
    "ActionScript for Data Binding and MVC in Flex", "Working with DataGrid and List Components in Flex", 
    "Advanced Flex Features with ActionScript", "Building Desktop Applications with ActionScript (AIR)", 
    "Animation Libraries and Frameworks", "Using ActionScript with HTML5 (Canvas Integration)", 
    "Optimizing ActionScript for Mobile Platforms", "Creating Interactive Animations with ActionScript", 
    "Integrating Third-Party Libraries into ActionScript Projects", "Working with Actionscript for Video Streaming", 
    "Using ActionScript for Game Development with Libraries like Starling and Feathers"
],
"Processing": [
    "Introduction to Processing", "Setting Up the Processing Environment", "Understanding the Processing IDE", 
    "Processing Syntax", "Basic Drawing in Processing", "Using Primitive Shapes (ellipse, rect, line, etc.)", 
    "Colors in Processing", "Working with Coordinates and Screen Space", "Movement and Animation Basics", 
    "Control Structures (if, else, switch)", "Loops (for, while)", "Functions in Processing", 
    "User Input (mouse, keyboard, touch)", "Working with Variables in Processing", "Creating Interactive Graphics", 
    "Working with Text in Processing", "Using Images in Processing", "Handling and Manipulating Pixels", 
    "Animation and Frame Rate Control", "Using Random Numbers in Processing", "Creating Gradients in Processing", 
    "Working with Arrays in Processing", "Mouse and Keyboard Events in Processing", 
    "Creating Custom Functions in Processing", "Creating Multiple Screens (Scenes)", "Managing Time and Animation", 
    "Creating Simple Games in Processing", "Collision Detection in Processing", "Creating Backgrounds and Layers", 
    "Using Sounds and Audio in Processing", "Animation Timing with `frameRate()`", 
    "Image Processing and Manipulation", "Creating User Interface Elements in Processing", 
    "Working with 2D and 3D Graphics", "3D Shapes and Coordinates in Processing", 
    "Lighting and Shading in 3D", "Camera Control in 3D", "Using P3D for 3D Rendering", 
    "Working with 3D Transformations (rotate, scale, translate)", "Creating Interactive 3D Graphics", 
    "Creating Particle Systems", "Simulating Physics in Processing", "Working with Real-Time Input Devices", 
    "Using Libraries in Processing", "Drawing with the Bezier Curve and Splines", "Creating Procedural Generation", 
    "Working with Perlin Noise", "Data Visualization with Processing", "Creating Interactive Data Visualizations", 
    "Working with External Data (CSV, JSON)", "Using Web APIs in Processing", "Using Processing with Arduino", 
    "Building Interactive Installations with Processing", "Exporting Graphics from Processing", 
    "Using Processing for Generative Art", "Programming Interactive Art", "Building Interactive Exhibits with Processing", 
    "Using Processing for Rapid Prototyping", "Creating Generative Animations", "Using Processing for Education", 
    "Processing for Scientific Visualization", "Creating Dynamic Interactive Applications", 
    "Integrating Processing with Other Software (e.g., Unity)", "Processing and 3D Printing", 
    "Working with Video in Processing", "Creating Augmented Reality with Processing", 
    "Working with OpenGL in Processing", "Optimizing Performance in Processing", "Debugging and Troubleshooting in Processing", 
    "Creating Custom Shaders in Processing", "Exporting Processing Sketches to Java Applications", 
    "Collaborating on Processing Projects", "Using Processing for Creative Coding", "Creating Installations for Interactive Art", 
    "Real-Time Rendering in Processing", "Processing for IoT Applications", "Using OpenCV with Processing", 
    "Collaborative Tools for Processing Projects"
]
}

# âœ… Insert concepts into the database
for language, concept_list in concepts.items():
    for concept in concept_list:
        cur.execute("INSERT INTO programming_concepts (language, concepts) VALUES (?, ?)", (language.capitalize(), concept))

# Save and close
connection.commit()
connection.close()

print("âœ… Database created and populated successfully!")


